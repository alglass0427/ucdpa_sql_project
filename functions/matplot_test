import yfinance as yf
import matplotlib.pyplot as plt
import tempfile
import os

# # Fetch stock data
# stock_code = 'TSLA'  # Example: Apple stock
# stock = yf.Ticker(stock_code)
# print(stock)
# # Get historical data for the past month
# stock_info = stock.history(period="3mo")
# print(stock_info)
# # Input buy price (manually specified)
# buy_price = 225  # Example: You bought the stock at $150

# # Calculate daily returns
# stock_info['Daily Return'] = stock_info['Close'].pct_change()
# print(stock_info['Daily Return'])
# # Calculate the moving average
# stock_info['20 Day MA'] = stock_info['Close'].rolling(window=20).mean()
# print(stock_info['20 Day MA'])
# # Plotting the stock price
# plt.figure(figsize=(10, 5))

# # Plot the closing price
# plt.plot(stock_info.index, stock_info['Close'], label='Closing Price', color='blue')

# # Plot the 20-day moving average
# plt.plot(stock_info.index, stock_info['20 Day MA'], label='20 Day MA', color='orange')

# # Plot the buy price as a horizontal benchmark line
# plt.axhline(y=buy_price, color='green', linestyle='--', label=f'Buy Price (${buy_price})')


# # Add labels and title
# plt.title(f'{stock_code} Stock Performance - Last 1 Month')
# plt.xlabel('Date')
# plt.ylabel('Price')
# plt.legend()

# # Show the plot
# plt.show()

# # Plotting daily returns
# plt.figure(figsize=(14, 7))
# plt.plot(stock_info.index, stock_info['Daily Return'], label='Daily Return', color='red')
# plt.title(f'{stock_code} Daily Returns - Last 1 Month')
# plt.xlabel('Date')
# plt.ylabel('Daily Return')
# plt.legend()
# plt.show()
# Fetch stock data
#-------------------------------------------------------------------------------
stock_code = 'AAPL'  # Example: Apple stock
# Assuming your Flask app has a static directory
path = os.getcwd()
parent_folder  =  os.path.abspath(os.path.join(path, os.pardir))

static_folder  = os.path.join(parent_folder, f"app/static/graphs")
if not os.path.exists(static_folder):
    print(f"Creating user data folder at {static_folder}")
    os.makedirs(static_folder)

# static_dir = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'static')
svg_filename = f"{stock_code}_performance.svg"
svg_file_path = os.path.join(static_folder, svg_filename)

# Fetch stock data

stock = yf.Ticker(stock_code)

# Get historical data for the past month
stock_info = stock.history(period="1mo")

# Input buy price (manually specified)
buy_price = 150  # Example: You bought the stock at $150

# Calculate the moving average (optional)
stock_info['20 Day MA'] = stock_info['Close'].rolling(window=20).mean()

# Create a plot
plt.figure(figsize=(14, 7))

# Plot the closing price
plt.plot(stock_info.index, stock_info['Close'], label='Closing Price', color='blue')

# Plot the 20-day moving average
plt.plot(stock_info.index, stock_info['20 Day MA'], label='20 Day MA', color='orange')

# Plot the buy price as a horizontal benchmark line
plt.axhline(y=buy_price, color='green', linestyle='--', label=f'Buy Price (${buy_price})')

# Add labels and title
plt.title(f'{stock_code} Stock Performance - Last 1 Month')
plt.xlabel('Date')
plt.ylabel('Price')
plt.legend()

# Save the plot to the static directory as an SVG
plt.savefig(svg_file_path, format='svg')

# Close the plot
plt.close()

print(f"SVG file saved at: {svg_file_path}")
